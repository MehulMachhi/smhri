# Generated by Django 4.1.4 on 2022-12-13 06:48

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AudiometerThresholdDecimats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('right_ac_500', models.IntegerField()),
                ('right_bc_500', models.IntegerField()),
                ('right_ac_1000', models.IntegerField()),
                ('right_bc_1000', models.IntegerField()),
                ('right_ac_2000', models.IntegerField()),
                ('right_bc_2000', models.IntegerField()),
                ('right_ac_4000', models.IntegerField()),
                ('right_bc_4000', models.IntegerField()),
                ('right_ac_5000', models.IntegerField()),
                ('right_bc_5000', models.IntegerField()),
                ('left_ac_500', models.IntegerField()),
                ('left_bc_500', models.IntegerField()),
                ('left_ac_1000', models.IntegerField()),
                ('left_bc_1000', models.IntegerField()),
                ('left_ac_2000', models.IntegerField()),
                ('left_bc_2000', models.IntegerField()),
                ('left_ac_4000', models.IntegerField()),
                ('left_bc_4000', models.IntegerField()),
                ('left_ac_5000', models.IntegerField()),
                ('left_bc_5000', models.IntegerField()),
                ('for_right_ear', models.IntegerField()),
                ('for_left_ear', models.IntegerField()),
                ('audiometery', models.IntegerField()),
                ('xray_report', models.IntegerField()),
                ('ultra_sonographic', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='BloodTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_cholestrol', models.IntegerField()),
                ('s_creatinine', models.IntegerField()),
                ('blood_urea', models.IntegerField()),
                ('fasting_blood_glucose', models.IntegerField()),
                ('random_blood_glucose', models.IntegerField()),
                ('post_prandial_blood_glucose', models.IntegerField()),
                ('total_bilirubin', models.IntegerField()),
                ('direct_bilirubin', models.IntegerField()),
                ('indirect_bilirubin', models.IntegerField()),
                ('sgpt', models.IntegerField()),
                ('sgot', models.IntegerField()),
                ('alkaline_phosphatase', models.IntegerField()),
                ('ggt', models.IntegerField()),
                ('total_cholesterol', models.IntegerField()),
                ('triglycerides', models.IntegerField()),
                ('direct_hdl', models.IntegerField()),
                ('vldl', models.IntegerField()),
                ('ldl', models.IntegerField()),
                ('ch_ratio', models.IntegerField()),
                ('lh_ratio', models.IntegerField()),
                ('rdw_sd', models.IntegerField()),
                ('plcc', models.IntegerField()),
                ('plcr', models.IntegerField()),
                ('vitaminb12', models.IntegerField()),
                ('vitamind3', models.IntegerField()),
                ('hcv', models.IntegerField()),
                ('psa', models.IntegerField()),
                ('bun', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Complaints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('present_complaints', models.CharField(max_length=255)),
                ('occupational_complaints', models.CharField(max_length=255)),
                ('family_health_history', models.CharField(max_length=255)),
                ('personal_health_history', models.CharField(max_length=255)),
                ('past_history', models.CharField(max_length=255)),
                ('allergic_to', models.CharField(max_length=255)),
                ('id_mark_scar', models.CharField(max_length=255)),
                ('id_mark_mole', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Hematology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_group', models.CharField(max_length=50)),
                ('hemoglobin', models.CharField(max_length=50)),
                ('total_wbc_count', models.IntegerField()),
                ('polymorphs', models.IntegerField()),
                ('lymphocytes', models.IntegerField()),
                ('eosinophils', models.IntegerField()),
                ('monocytes', models.IntegerField()),
                ('basophils', models.IntegerField()),
                ('leucocytes_count', models.IntegerField()),
                ('platelet_count', models.IntegerField()),
                ('esr', models.IntegerField()),
                ('hct', models.IntegerField()),
                ('rdw_cv', models.IntegerField()),
                ('pdw', models.IntegerField()),
                ('mpv', models.IntegerField()),
                ('mch', models.IntegerField()),
                ('mchc', models.IntegerField()),
                ('pct', models.IntegerField()),
                ('mcv', models.IntegerField()),
                ('peripheral_smear', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LungFunctionTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fvc', models.IntegerField()),
                ('fev1', models.IntegerField()),
                ('fev1_fvc', models.IntegerField()),
                ('peak_exp_flow', models.IntegerField()),
                ('fef50', models.IntegerField()),
                ('fvc_predicted', models.IntegerField()),
                ('fev1_predicted', models.IntegerField()),
                ('fev1_fvc_predicted', models.IntegerField()),
                ('pefr_predicted', models.IntegerField()),
                ('fef50_predicted', models.IntegerField()),
                ('fvc_per_predicted', models.IntegerField()),
                ('fev1_per_predicted', models.IntegerField()),
                ('fev1_fvc_per_predicted', models.IntegerField()),
                ('pefr_per_predicted', models.IntegerField()),
                ('fef50_per_predicted', models.IntegerField()),
                ('spirometry', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MicroscopicExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('red_blood_cells', models.IntegerField()),
                ('pus_cells', models.IntegerField()),
                ('epithelial_cells', models.IntegerField()),
                ('urine_report', models.IntegerField()),
                ('casts', models.IntegerField()),
                ('crystais', models.IntegerField()),
                ('material', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OtherTests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serum_cholinesterase', models.IntegerField()),
                ('hs_crp', models.IntegerField()),
                ('gppd', models.IntegerField()),
                ('hba1c', models.IntegerField()),
                ('avg_blood_glucose_level', models.IntegerField()),
                ('hbsag', models.IntegerField()),
                ('hiv_result', models.IntegerField()),
                ('hiv_method', models.IntegerField()),
                ('hiv_remark', models.IntegerField()),
                ('s_protein_total', models.IntegerField()),
                ('s_albumin_bcg', models.IntegerField()),
                ('s_globulin', models.IntegerField()),
                ('ag_ratio', models.IntegerField()),
                ('acid_fast_bacilli', models.IntegerField()),
                ('stool_color', models.IntegerField()),
                ('stool_blood', models.IntegerField()),
                ('stool_mucus', models.IntegerField()),
                ('stool_adults_warm', models.IntegerField()),
                ('stool_parasites', models.IntegerField()),
                ('stool_pus', models.IntegerField()),
                ('stool_ph', models.IntegerField()),
                ('stool_occult_blood', models.IntegerField()),
                ('stool_reducing_substances', models.IntegerField()),
                ('stool_rbcs', models.IntegerField()),
                ('stool_puscells', models.IntegerField()),
                ('stool_fat_globules', models.IntegerField()),
                ('stool_macrophages', models.IntegerField()),
                ('stool_epithelial_cell', models.IntegerField()),
                ('stool_muscle_fibers', models.IntegerField()),
                ('stool_vegetable_cell', models.IntegerField()),
                ('stool_bacteria', models.IntegerField()),
                ('stool_cyst', models.IntegerField()),
                ('stool_ova', models.IntegerField()),
                ('stool_trophozoites', models.IntegerField()),
                ('stool_larva', models.IntegerField()),
                ('stool_yeast_cells', models.IntegerField()),
                ('stool_starch_granules', models.IntegerField()),
                ('thyroid_tsh', models.IntegerField()),
                ('thyroid_t3', models.IntegerField()),
                ('thyroid_t4', models.IntegerField()),
                ('vdrl', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PhysiologicalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('blood_pressure', models.IntegerField()),
                ('pulse', models.IntegerField()),
                ('heart_sound', models.IntegerField()),
                ('chest_on_expiration', models.IntegerField()),
                ('chest_on_inspiration', models.IntegerField()),
                ('waist', models.IntegerField()),
                ('hips', models.IntegerField()),
                ('waist_hip_ratio', models.IntegerField()),
                ('remarks_and_advice', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SystematicExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skin', models.CharField(max_length=100)),
                ('respiratory_system', models.CharField(max_length=255)),
                ('cardiovascular_system', models.CharField(max_length=255)),
                ('genito_urinary_system', models.CharField(max_length=255)),
                ('skeletal_system', models.CharField(max_length=255)),
                ('cns', models.CharField(max_length=255)),
                ('breath_sound', models.CharField(max_length=255)),
                ('abdomen', models.CharField(max_length=255)),
                ('other_finding', models.CharField(max_length=255)),
                ('ecg_report', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TestMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=255)),
                ('test_desc', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('test_model', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='VisualTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nearvision_without_glass', models.IntegerField()),
                ('distance_vision_without_glass', models.IntegerField()),
                ('nearvision_with_glass', models.IntegerField()),
                ('distance_vision_with_glass', models.IntegerField()),
                ('nearvision_without_glass_right', models.IntegerField()),
                ('distance_vision_without_glass_right', models.IntegerField()),
                ('nearvision_with_glass_right', models.IntegerField()),
                ('distance_vision_with_glass_right', models.IntegerField()),
                ('vision_remark', models.IntegerField()),
            ],
        ),
    ]
